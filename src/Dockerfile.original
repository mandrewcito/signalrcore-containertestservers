#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443
ENV ASPNETCORE_ENVIRONMENT=Development
ENV ASPNETCORE_URLS=https://+:443;http://+:80
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV DOTNET_USE_POLLING_FILE_WATCHER=1
ENV ASPNETCORE_Kestrel__Certificates__Default__Password=something
ENV ASPNETCORE_Kestrel__Certificates__Default__Path=aspnetapp.pfx

FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
WORKDIR /src
COPY ["src.csproj", ""]
#RUN dotnet dev-certs https -ep /src/aspnetapp.pfx -p something
#RUN dotnet dev-certs https --trust
#RUN dotnet dev-certs https --clean
#RUN dotnet dev-certs https --trust
#RUN sudo openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -certfile more.crt
#RUN sudo usermod -aG ssl-cert www-data
RUN dotnet restore "./src.csproj"

COPY . .
WORKDIR "/src"
RUN dotnet build "src.csproj" -c Development -o /app/build
COPY aspnetapp.pfx  /app/build

FROM build AS publish
RUN dotnet publish "src.csproj" -c Development -o /app/publish
COPY aspnetapp.pfx  /app/publish

FROM base AS final
WORKDIR /app

COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "src.dll"]